# creates a new release for LIVE and PTU channel every day at 3am when the corresponding global.ini
# was changed in the last 24 hours
#
# steps:
# 1. checkout the code
# 2. count the commits for the global.ini in the last 24 hours
# - the following steps are only run then the commit count is > 0
# 3. get the current date
# 4. create the zip
# 5. create the release

on:
  push:
    branches: "main"
  # schedule:
  #   - cron: "0 3 * * *"

name: Create Release

jobs:
  get_context_info:
    runs-on: ubuntu-latest
    outputs:
      date: ${{steps.date.outputs.date}}
      commit_count_live: ${{steps.new_commits_live.outputs.NEW_COMMIT_COUNT_LIVE}}
      commit_count_ptu: ${{steps.new_commits_live.outputs.NEW_COMMIT_COUNT_PTU}}
    steps:
      - id: date
        run: echo "date=$(date '+%d.%m.%y')" >> $GITHUB_OUTPUT
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Get New Commits # counts the commits to live/global.ini during the last 24 hours
        id: new_commits_live
        run: echo "NEW_COMMIT_COUNT_LIVE=$(git log --oneline --since '24 hours ago' -- live/global.ini | wc -l)" >> $GITHUB_ENV
      - name: Get New Commits # counts the commits to live/global.ini during the last 24 hours
        id: new_commits_ptu
        run: echo "NEW_COMMIT_COUNT_PTU=$(git log --oneline --since '24 hours ago' -- ptu/global.ini | wc -l)" >> $GITHUB_ENV

  live_release:
    name: Create Live Release
    runs-on: ubuntu-latest
    needs: get_context_info
    if: needs.get_context_info.outputs.commit_count_live > 0
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release Zip
        run: |
          sudo timedatectl set-timezone Europe/Berlin
          mkdir release
          cp "live/user.cfg" "release"
          mkdir -p "release/data/Localization/german_(germany)"
          cp "live/global.ini" "release/data/Localization/german_(germany)/"
          cd release
          echo "${{ vars.VERSION_FILE_TEXT_LIVE }} $(date '+%d.%m.%y - %H:%M Uhr')" >> Versionstext.txt
          mv Versionstext.txt Version-$(date "+%d.%m.%y-%H.%M").txt
          zip -r "../${{ vars.ZIP_NAME_LIVE }}" *

      - name: Create Release New
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.run_number }} #needs.get_context_info.outputs.date
          commit: main
          name: ${{ vars.RELEASE_TITLE_LIVE }}
          body: ${{ vars.RELEASE_BODY_LIVE }}
          artifacts: ${{ vars.ZIP_NAME_LIVE }}

  ptu_release:
    name: Create PTU Release
    runs-on: ubuntu-latest
    needs: get_context_info
    if: (vars.TRIGGER_PTU_RELEASE == 1 && needs.get_context_info.outputs.commit_count_ptu > 0)
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release Zip
        run: |
          sudo timedatectl set-timezone Europe/Berlin
          mkdir release
          cp "ptu/user.cfg" "release"
          mkdir -p "release/data/Localization/german_(germany)"
          cp "ptu/global.ini" "release/data/Localization/german_(germany)/"
          cd release
          echo "${{ vars.VERSION_FILE_TEXT_PTU }} $(date '+%d.%m.%y - %H:%M Uhr')" >> Versionstext.txt
          mv Versionstext.txt Version-$(date "+%d.%m.%y-%H.%M").txt
          zip -r "../${{ vars.ZIP_NAME_PTU }}" *

      - name: Create Release New
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.run_number }}-PTU #needs.get_context_info.outputs.date
          commit: main
          name: ${{ vars.RELEASE_TITLE_PTU }}
          body: ${{ vars.RELEASE_BODY_PTU }}
          artifacts: ${{ vars.ZIP_NAME_PTU }}
          makeLatest: "latest"
          prerelease: true
